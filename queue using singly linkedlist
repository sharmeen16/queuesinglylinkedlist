#include<stdio.h>
#include<stdlib.h>
struct Node*f=NULL;
struct Node *r=NULL;

struct Node
{
	int data;
	struct Node*next;
};
void linkedlistTraversal(struct Node*ptr)
{
	printf("printing the element of this linkedlist\n");
	while(ptr!=NULL)
	{
		printf("Element:%d/n",ptr->data);
		ptr=ptr->next;
	}
}
void enqueue(struct Node*f,struct Node*r,int val)
{
	struct Node*n=(struct Node*) malloc(sizeof(struct Node));
	if(n==NULL){
		printf("Queue is full");
	}
	else{
		n->data=val;
		n->next=NULL;
		if(f==NULL){
			f=r=n;
		}
		else{
			r->next=n;
			r=n;
		}
	}
}
int dequeue()
{
	int val=-1;
	struct Node*ptr=f;
	if(f==NULL){
		printf("Queue is empty");
	}
	else{
		f=f->next;
		val=ptr->data;
		free(ptr);
		
	}
	return val;
}
int main()
{
	enqueue(f,r,4);
	enqueue(f,r,74);
	enqueue(f,r,40);
	enqueue(f,r,34);
		printf("dequeueing element%d\n",dequeue());
linkedlistTraversal(f);
return 0;
}
